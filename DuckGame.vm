function DuckGame.new 0
push constant 8
call Memory.alloc 1
pop pointer 0
push constant 0
pop this 7
push constant 16
pop static 0
push static 0
push constant 10
call Math.multiply 2
push static 0
push constant 10
call Math.multiply 2
push static 0
call Duck.new 3
pop this 0
push static 0
push constant 5
call Math.multiply 2
push static 0
push constant 5
call Math.multiply 2
push static 0
call Duckling.new 3
pop this 3
call List.new 0
pop this 2
push constant 0
not
call Screen.setColor 1
pop temp 0
push constant 17
push constant 40
push constant 480
push constant 40
call Screen.drawLine 4
pop temp 0
push constant 17
push constant 220
push constant 480
push constant 220
call Screen.drawLine 4
pop temp 0
push constant 17
push constant 40
push constant 17
push constant 220
call Screen.drawLine 4
pop temp 0
push constant 480
push constant 40
push constant 480
push constant 220
call Screen.drawLine 4
pop temp 0
push constant 0
pop this 1
push pointer 0
return
function DuckGame.dispose 0
push argument 0
pop pointer 0
push this 0
call Duck.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function DuckGame.update 6
push argument 0
pop pointer 0
push this 0
call Duck.getx 1
pop local 2
push this 0
call Duck.gety 1
pop local 3
push this 3
call Duckling.getx 1
pop local 4
push this 3
call Duckling.gety 1
pop local 5
push constant 0
pop local 1
push local 2
push local 4
eq
push local 3
and
push local 5
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 2
push this 3
call List.append 2
pop temp 0
push this 7
push constant 1
add
pop this 7
push this 7
call Output.printInt 1
pop temp 0
push this 4
push constant 5
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 1
pop this 4
push constant 1
pop this 5
label IF_FALSE1
push constant 256
push this 4
push this 6
call Math.multiply 2
push static 0
call Math.multiply 2
add
push constant 128
push this 4
push this 6
call Math.multiply 2
push static 0
call Math.multiply 2
add
push static 0
call Duckling.new 3
pop this 3
push this 6
push constant 1
neg
call Math.multiply 2
pop this 6
push this 4
push constant 1
add
pop this 4
label IF_FALSE0
push this 2
call List.getLast 1
pop local 0
push local 0
push constant 0
eq
not
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 0
call Duckling.erase 1
pop temp 0
push local 0
call Duckling.getPrevious 1
pop local 1
label WHILE_EXP0
push local 1
push constant 0
eq
not
not
if-goto WHILE_END0
push local 1
call Duckling.getx 1
pop local 4
push local 1
call Duckling.gety 1
pop local 5
push local 0
push local 4
push local 5
call Duckling.setPosition 3
pop temp 0
push local 1
pop local 0
push local 0
call Duckling.getPrevious 1
pop local 1
goto WHILE_EXP0
label WHILE_END0
push local 0
push local 2
push local 3
call Duckling.setPosition 3
pop temp 0
goto IF_END2
label IF_FALSE2
push this 0
call Duck.erase 1
pop temp 0
label IF_END2
push this 0
push this 1
call Duck.moveDuck 2
pop temp 0
push constant 100
call Sys.wait 1
pop temp 0
push constant 0
return
function DuckGame.run 2
push argument 0
pop pointer 0
push constant 0
pop local 1
push constant 1
pop this 4
push constant 1
pop this 5
push constant 1
pop this 6
label WHILE_EXP0
push local 1
not
not
if-goto WHILE_END0
label WHILE_EXP1
push local 0
push constant 0
eq
not
if-goto WHILE_END1
push this 0
call Duck.getx 1
push constant 463
gt
push this 0
call Duck.getx 1
or
push constant 17
lt
push this 0
call Duck.gety 1
or
push constant 204
gt
push this 0
call Duck.gety 1
or
push constant 40
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
pop local 1
push constant 81
pop local 0
goto IF_END0
label IF_FALSE0
call Keyboard.keyPressed 0
pop local 0
push pointer 0
call DuckGame.update 1
pop temp 0
label IF_END0
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 81
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
not
pop local 1
label IF_FALSE1
push local 0
push constant 131
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 1
pop this 1
label IF_FALSE2
push local 0
push constant 133
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 2
pop this 1
label IF_FALSE3
push local 0
push constant 130
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 3
pop this 1
label IF_FALSE4
push local 0
push constant 132
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push constant 4
pop this 1
label IF_FALSE5
label WHILE_EXP2
push local 0
push constant 0
eq
not
not
if-goto WHILE_END2
push this 0
call Duck.getx 1
push constant 463
gt
push this 0
call Duck.getx 1
or
push constant 17
lt
push this 0
call Duck.gety 1
or
push constant 204
gt
push this 0
call Duck.gety 1
or
push constant 40
lt
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push constant 0
not
pop local 1
push constant 0
pop local 0
goto IF_END6
label IF_FALSE6
call Keyboard.keyPressed 0
pop local 0
push pointer 0
call DuckGame.update 1
pop temp 0
label IF_END6
goto WHILE_EXP2
label WHILE_END2
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
